name: Dependency Updates

on:
  schedule:
    - cron: '0 8 * * 1'  # Run every Monday at 8:00 UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true

      - name: Check for outdated dependencies
        id: outdated
        run: |
          go list -u -m -json all | grep -v 'gopkg.in/yaml.v3' | go-mod-outdated -update -direct -style markdown > outdated.md
          echo "::set-output name=count::$(cat outdated.md | wc -l)"
        continue-on-error: true

      - name: Create issue for outdated dependencies
        if: steps.outdated.outputs.count > 3  # Only create issue if there are dependencies to update
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "ðŸ“¦ Outdated Dependencies"
          content-filepath: ./outdated.md
          labels: dependencies, maintenance

      - name: Create PR with dependency updates
        id: create-pr
        run: |
          # Update Go modules
          go get -u ./...
          go mod tidy
          
          # Check if there are changes
          if ! git diff --exit-code go.mod go.sum; then
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git checkout -b deps/update-$(date +'%Y-%m-%d')
            git add go.mod go.sum
            git commit -m "chore: update dependencies"
            git push --set-upstream origin deps/update-$(date +'%Y-%m-%d')
            gh pr create --title "chore: update dependencies" --body "Automatic dependency updates" --label "dependencies"
            echo "::set-output name=created::true"
          else
            echo "No dependency updates needed"
            echo "::set-output name=created::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 