name: Docker

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Dockerfile
        run: |
          cat > Dockerfile << 'EOF'
          FROM golang:1.22-alpine AS builder

          WORKDIR /app

          # Copy go.mod and go.sum first to leverage Docker cache
          COPY go.mod go.sum ./
          RUN go mod download

          # Copy the rest of the source code
          COPY . .

          # Build the application
          ARG VERSION=dev
          RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o girus -ldflags="-X 'github.com/linuxtips/girus/girus-cli/cmd.Version=${VERSION}'" ./main.go

          # Use a minimal alpine image for the final container
          FROM alpine:3.18

          # Install necessary packages
          RUN apk add --no-cache ca-certificates curl bash docker-cli

          # Install kind and kubectl
          RUN curl -Lo /usr/local/bin/kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64 && \
              chmod +x /usr/local/bin/kind && \
              curl -Lo /usr/local/bin/kubectl "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
              chmod +x /usr/local/bin/kubectl

          WORKDIR /app

          # Copy the binary from the builder stage
          COPY --from=builder /app/girus /usr/local/bin/girus

          # Create entrypoint
          ENTRYPOINT ["/usr/local/bin/girus"]

          # Default command
          CMD ["help"]
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check Docker Hub credentials
        id: dockerhub_check
        run: |
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] && [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "has_dockerhub_credentials=true" >> $GITHUB_OUTPUT
          else
            echo "has_dockerhub_credentials=false" >> $GITHUB_OUTPUT
            echo "::error::Docker Hub credentials not found. Please set DOCKERHUB_USERNAME and DOCKERHUB_TOKEN secrets."
            exit 1
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/girus-cli
          tags: |
            type=sha,format=short
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} 