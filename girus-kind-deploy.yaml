apiVersion: v1
kind: Namespace
metadata:
  name: girus
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: girus-sa
  namespace: girus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: girus-role
  namespace: girus
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log", "pods/exec"]
    verbs: ["get", "list", "create", "delete", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: girus-cluster-role
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods", "pods/log", "pods/exec"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["services", "configmaps", "secrets", "serviceaccounts"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: girus-cluster-rolebinding
subjects:
  - kind: ServiceAccount
    name: girus-sa
    namespace: girus
roleRef:
  kind: ClusterRole
  name: girus-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: girus-rolebinding
  namespace: girus
subjects:
  - kind: ServiceAccount
    name: girus-sa
    namespace: girus
roleRef:
  kind: Role
  name: girus-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: girus-config
  namespace: girus
data:
  config.yaml: |
    lab:
      defaultImage: "ubuntu:latest"
      podNamePrefix: "lab"
      containerName: "linux-lab"
      command:
        - "sleep"
        - "infinity"
      resources:
        cpuRequest: "100m"
        cpuLimit: "500m"
        memoryRequest: "64Mi"
        memoryLimit: "256Mi"
      envVars:
        TERM: "xterm-256color"
        SHELL: "/bin/bash"
        privileged: false
    # Outras configurações podem ser adicionadas aqui


# Os ConfigMaps de labs foram movidos para o diretório /labs na raiz do projeto.
# Para aplicar os templates de laboratório, execute:
#   ./update-labs.sh
#
# Ou aplique manualmente:
#   kubectl apply -f ./labs/

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: basic-linux-lab
  namespace: girus
  labels:
    app: girus-lab-template
data:
  lab.yaml: |
    name: linux-basics
    title: "Introdução ao Linux"
    description: "Laboratório básico para praticar comandos Linux essenciais e conceitos fundamentais"
    duration: 30m
    tasks:
      - name: "Navegação básica"
        description: "Aprenda os comandos essenciais para navegar no sistema de arquivos Linux"
        steps:
          - "Comece verificando qual é seu diretório atual com o comando:"
          - "`pwd`"
          - "Liste todos os arquivos (incluindo ocultos) do diretório atual:"
          - "`ls -la`"
          - "Crie um novo diretório para praticar:"
          - "`mkdir lab-practice`"
          - "Entre no diretório criado:"
          - "`cd lab-practice`"
          - "Crie alguns arquivos para praticar:"
          - "`touch file1.txt file2.txt file3.txt`"
        tips:
          - type: "info"
            title: "Dica: Atalhos úteis"
            content: "Use cd .. para voltar um diretório acima, e cd ~ para ir direto para seu diretório home. O comando ls tem muitas opções úteis: ls -l (formato detalhado), ls -a (mostra arquivos ocultos), ls -h (tamanhos legíveis por humanos)."
        validation:
          - command: "test -d lab-practice && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "Diretório 'lab-practice' não foi criado"
          - command: "test -f lab-practice/file1.txt && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "Arquivos de teste não foram criados"

      - name: "Manipulação de arquivos"
        description: "Aprenda a criar, editar e gerenciar arquivos no Linux"
        steps:
          - "Atualize a lista de pacotes disponíveis:"
          - "`apt update`"
          - "Instale o editor de texto nano:"
          - "`apt install -y nano`"
          - "Crie um arquivo de texto usando o editor nano:"
          - "`nano notes.txt`"
          - "Adicione algumas linhas de texto e salve com Ctrl+O e saia com Ctrl+X"
          - "Visualize o conteúdo do arquivo:"
          - "`cat notes.txt`"
          - "Copie um arquivo para outro nome:"
          - "`cp notes.txt notes_backup.txt`"
          - "Compare os dois arquivos:"
          - "`diff notes.txt notes_backup.txt`"
          - "Adicione mais conteúdo ao arquivo original:"
          - "`echo 'Nova linha adicionada!' >> notes.txt`"
          - "Compare novamente os arquivos:"
          - "`diff notes.txt notes_backup.txt`"
        tips:
          - type: "warning"
            title: "Atenção: Redirecionamentos"
            content: "O símbolo > redireciona a saída e sobrescreve o arquivo existente, enquanto >> adiciona ao final do arquivo sem apagar o conteúdo anterior."
        validation:
          - command: "test -f lab-practice/notes.txt && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "Arquivo notes.txt não foi criado"
          - command: "test -f lab-practice/notes_backup.txt && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "Arquivo de backup não foi criado"

      - name: "Permissões de arquivos"
        description: "Aprenda a gerenciar permissões de arquivos e diretórios"
        steps:
          - "Verifique as permissões atuais dos arquivos:"
          - "`ls -l`"
          - "Crie um script shell simples:"
          - "`nano script.sh`"
          - "Adicione o seguinte conteúdo ao script:"
          - |
            ```bash
            #!/bin/bash
            echo "Olá, este é meu primeiro script!"
            echo "Data atual: $(date)"
            echo "Usuário atual: $(whoami)"
            ```
          - "Salve o arquivo (Ctrl+O, Enter, Ctrl+X)"
          - "Tente executar o script:"
          - "`./script.sh`"
          - "Você receberá um erro de permissão. Adicione permissão de execução:"
          - "`chmod +x script.sh`"
          - "Agora execute novamente:"
          - "`./script.sh`"
        tips:
          - type: "info"
            title: "Sobre permissões Linux"
            content: "As permissões no Linux são representadas por r (leitura), w (escrita) e x (execução) para três grupos: proprietário, grupo e outros. O comando chmod +x adiciona permissão de execução para todos os grupos."
          - type: "tip"
            title: "Modo octal"
            content: "Você também pode usar o modo octal para definir permissões: chmod 755 arquivo (rwx para o dono, rx para grupo e outros)"
        validation:
          - command: "test -f lab-practice/script.sh && ls -l lab-practice/script.sh | grep -q x && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "Script não foi criado ou não tem permissão de execução"

      - name: "Processos e monitoramento"
        description: "Aprenda a monitorar e gerenciar processos no Linux"
        steps:
          - "Veja os processos em execução:"
          - "`ps aux`"
          - "Monitore os processos e recursos em tempo real:"
          - "`top`"
          - "Pressione 'q' para sair do top"
          - "Execute um processo em segundo plano:"
          - "`sleep 300 &`"
          - "Veja o processo em execução:"
          - "`ps aux | grep sleep`"
          - "Termine o processo sleep:"
          - "`pkill sleep`"
        tips:
          - type: "tip"
            title: "Alternativa ao top"
            content: "O comando htop é uma versão melhorada do top com interface colorida e interativa. Instale-o com 'apt install htop' em sistemas Debian/Ubuntu."
        validation:
          - command: "ps aux | grep -v grep | grep -q sleep || echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "O processo sleep não foi encerrado corretamente"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: girus-backend
  namespace: girus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: girus-backend
  template:
    metadata:
      labels:
        app: girus-backend
    spec:
      serviceAccountName: girus-sa
      containers:
        - name: backend
          image: linuxtips/girus-backend:0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: GIN_MODE
              value: "release"
            - name: LAB_DEFAULT_IMAGE
              valueFrom:
                configMapKeyRef:
                  name: girus-config
                  key: lab.defaultImage
                  optional: true
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      volumes:
        - name: config-volume
          configMap:
            name: girus-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: girus-frontend
  namespace: girus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: girus-frontend
  template:
    metadata:
      labels:
        app: girus-frontend
    spec:
      containers:
        - name: frontend
          image: linuxtips/girus-frontend:0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: girus-backend
  namespace: girus
spec:
  selector:
    app: girus-backend
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: girus-frontend
  namespace: girus
spec:
  selector:
    app: girus-frontend
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: girus-ingress
  namespace: girus
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: girus.local
      http:
        paths:
          - path: /api/(.*)
            pathType: Prefix
            backend:
              service:
                name: girus-backend
                port:
                  number: 8080
          - path: /ws/(.*)
            pathType: Prefix
            backend:
              service:
                name: girus-backend
                port:
                  number: 8080
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: girus-frontend
                port:
                  number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: girus
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        # Compressão
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_comp_level 6;
        
        # Cache para recursos estáticos
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
        
        # Redirecionar todas as requisições API para o backend
        location /api/ {
            proxy_pass http://girus-backend:8080/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_request_buffering off;
        }
        
        # Configuração para WebSockets
        location /ws/ {
            proxy_pass http://girus-backend:8080/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 86400;
        }
        
        # Configuração para React Router
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
